{
  "openapi": "3.0.1",
  "info": {
    "title": "STIS Contact API",
    "description": "API ini menyediakan layanan untuk mengelola dan mengakses informasi kontak yang dimiliki oleh mahasiswa dan dosen di Politeknik Statistika STIS. Layanan ini dirancang untuk mempermudah pencarian informasi kontak dengan menyediakan berbagai endpoint untuk menambah, memperbarui, dan menghapus kontak dari mahasiswa dan dosen. API ini juga mendukung pengelompokan kontak berdasarkan organisasi mahasiswa atau mata kuliah yang diampu oleh dosen serta menawarkan fitur pencarian yang fleksibel. \n\nFitur utama meliputi: \n- Manajemen kontak mahasiswa dan dosen \n- Pengelompokan kontak berdasarkan organisasi atau jurusan \n- Dukungan endpoint untuk CRUD (Create, Read, Update, Delete) pada data kontak \n- Fitur pencarian kontak berdasarkan organisasi atau mata kuliah yang diampu oleh dosen\n\n",
    "contact": {
      "name": "Dodi Firmansyah",
      "url": "https://github.com/dodfrm",
      "email": "222212572@stis.ac.id"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local Development Server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Endpoint ini digunakan untuk mengelola pembuatan, pengambilan, pembaruan, dan penghapusan informasi kontak mahasiswa dan dosen di Politeknik Statistika STIS."
    },
    {
      "name": "Contact Subject",
      "description": "Endpoint ini digunakan untuk mengelola informasi mata kuliah yang terkait dengan seorang dosen, di Politeknik Statistika STIS."
    },
    {
      "name": "Contact Organization",
      "description": "Endpoint ini digunakan untuk menambahkan organisasi ke kontak, baik mahasiswa maupun dosen, di Politeknik Statistika STIS."
    },
    {
      "name": "Subject",
      "description": "endpoint ini digunakan untuk mengelola matakuliah yang ada di Politeknik Statistika STIS."
    },
    {
      "name": "Organization",
      "description": "Endpoint ini digunakan untuk mengelola organisasi yang ada di Politeknik Statistika STIS."
    }
  ],
  "paths": {
    "/user/change-password/{userId}": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Change user password.",
        "operationId": "changePassword",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Password changed successfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid password data provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "error": "Invalid password data provided"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "User not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-profile/{userId}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Retrieve user profile by user ID.",
        "operationId": "getUserProfile",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "User not found"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Update user profile information.",
        "operationId": "updateUserProfile",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "User to register with details such as name, email, and password. The request must contain valid values.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": {
                  "name": "Dodi Firmansyah",
                  "email": "222212572@stis.ac.id",
                  "role": "ROLE_USER/ROLE_ADMIN"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid password data provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "error": "Invalid password data provided"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "User not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/subjects/{id}": {
      "get": {
        "tags": [
          "Subject"
        ],
        "summary": "Get a subject by ID",
        "operationId": "getSubjectById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found the subject",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Subject not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Subject not found"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subject"
        ],
        "summary": "Update an existing subject",
        "operationId": "updateSubject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": {
                  "subjectName": "Kalkulus"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Subject updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Subject not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Subject not found"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subject"
        ],
        "summary": "Delete a subject by ID",
        "operationId": "deleteSubject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Subject deleted"
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Subject not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Subject not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/{id}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get organization by ID",
        "operationId": "getOrganizationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Organization not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Organization not found"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Update an organization",
        "operationId": "updateOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": {
                  "organizationName": "BULSTIK"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Organization updated successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Organization not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Organization not found"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organization"
        ],
        "summary": "Delete an organization",
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization deleted successfully"
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Organization not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Organization not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by ID",
        "operationId": "getContactById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Contact not found"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update an existing contact",
        "operationId": "updateContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": {
                  "fullName": "Dodi Firmansyah",
                  "phone": "081998915680",
                  "email": "222212572@stis.ac.id",
                  "contactType": "MAHASISWA or DOSEN"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Contact not found"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a contact",
        "operationId": "deleteContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully"
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Contact not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/contact-subjects/{id}": {
      "get": {
        "tags": [
          "Contact Subject"
        ],
        "summary": "Get a Contact Subject by ID",
        "operationId": "getContactSubjectById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found the Contact Subject",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactSubjectDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact Subject not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Contact Subject not found"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contact Subject"
        ],
        "summary": "Update an existing Contact Subject",
        "operationId": "updateContactSubject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": {
                  "contactId": "{id}",
                  "subjectId": "{id}"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Contact Subject updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactSubjectDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact Subject not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Contact Subject not found"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contact Subject"
        ],
        "summary": "Delete a Contact Subject by ID",
        "operationId": "deleteContactSubject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact Subject deleted"
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact Subject not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Contact Subject not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/contact-organizations/{id}": {
      "get": {
        "tags": [
          "Contact Organization"
        ],
        "summary": "Get a contact organization by ID",
        "operationId": "getContactOrganizationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactOrganizationDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact organizations not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Contact organizations not found"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contact Organization"
        ],
        "summary": "Update an existing contact organization",
        "operationId": "updateContactOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": {
                  "contactId": "{id}",
                  "kelas": "3SI1",
                  "organizationId": "{id}",
                  "jabatan": "KETUA/WAKIL_KETUA/BENDAHARA",
                  "periodeJabatan": "2024/2025"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Contact organization updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactOrganizationDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact organizations not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Contact organizations not found"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contact Organization"
        ],
        "summary": "Delete a contact organization by ID",
        "operationId": "deleteContactOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact organization deleted successfully"
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact organizations not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Contact organizations not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Register a new user.",
        "operationId": "register",
        "requestBody": {
          "description": "User to register with details such as name, email, and password. The request must contain valid values.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": {
                  "name": "Dodi Firmansyah",
                  "email": "222212572@stis.ac.id",
                  "password": "utsppk2024"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "error": "Validation error details"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "error": "Internal server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "User login to get access token.",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Email and access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "error": "Internal server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/subjects": {
      "get": {
        "tags": [
          "Subject"
        ],
        "summary": "Get all subjects",
        "operationId": "getAllSubjects",
        "responses": {
          "200": {
            "description": "Found the subjects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Subject"
        ],
        "summary": "Create a new subject",
        "operationId": "createSubject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": {
                  "subjectName": "Kalkulus"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Subject created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get all organizations",
        "operationId": "getAllOrganizations",
        "responses": {
          "200": {
            "description": "List of all organizations",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Create a new organization",
        "operationId": "createOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": {
                  "organizationName": "BULSTIK"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Organization created successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get all contacts",
        "operationId": "getAllContacts",
        "responses": {
          "200": {
            "description": "List of all contacts",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a new contact",
        "operationId": "createContact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": {
                  "fullName": "Dodi Firmansyah",
                  "phone": "081998915680",
                  "email": "222212572@stis.ac.id",
                  "contactType": "MAHASISWA or DOSEN"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/contact-subjects": {
      "get": {
        "tags": [
          "Contact Subject"
        ],
        "summary": "Get all Contact Subject",
        "operationId": "getAllContactSubjects",
        "responses": {
          "200": {
            "description": "Found the Contact Subject",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactSubjectDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contact Subject"
        ],
        "summary": "Create a new Contact Subject",
        "operationId": "createContactSubject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": {
                  "contactId": "{id}",
                  "subjectId": "{id}"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Contact Subject created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactSubjectDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact not found.",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactSubjectDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/contact-organizations": {
      "get": {
        "tags": [
          "Contact Organization"
        ],
        "summary": "Get all contact organizations",
        "operationId": "getAllContactOrganizations",
        "responses": {
          "200": {
            "description": "Successfully retrieved list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactOrganizationDto"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contact Organization"
        ],
        "summary": "Create a new contact organization",
        "operationId": "createContactOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": {
                  "contactId": "{id}",
                  "kelas": "3SI1",
                  "organizationId": "{id}",
                  "jabatan": "KETUA/WAKIL_KETUA/BENDAHARA",
                  "periodeJabatan": "2024/2025"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Contact organization created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactOrganizationDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact not found.",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactOrganizationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts/search": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Search contact by criteria",
        "operationId": "searchContacts",
        "parameters": [
          {
            "name": "fullName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jabatan",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "KETUA",
                "WAKIL_KETUA",
                "BENDAHARA",
                "PJ_MATKUL"
              ]
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "MAHASISWA",
                "DOSEN"
              ]
            }
          },
          {
            "name": "organizationName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subjectName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Contact not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Delete a user account by user ID.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "User deleted successfully"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": {
                    "message": "User not found"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ContactOrganization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "kelas": {
            "type": "string"
          },
          "jabatan": {
            "type": "string",
            "enum": [
              "KETUA",
              "WAKIL_KETUA",
              "BENDAHARA",
              "PJ_MATKUL"
            ]
          },
          "periodeJabatan": {
            "type": "string"
          }
        }
      },
      "ContactSubject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "subject": {
            "$ref": "#/components/schemas/Subject"
          }
        }
      },
      "Subject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "subjectName": {
            "type": "string"
          }
        }
      },
      "ChangePasswordRequest": {
        "required": [
          "newPassword",
          "oldPassword"
        ],
        "type": "object",
        "properties": {
          "oldPassword": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "newPassword": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "GrantedAuthority": {
        "type": "object",
        "properties": {
          "authority": {
            "type": "string"
          }
        }
      },
      "UserDto": {
        "required": [
          "name",
          "password"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ROLE_USER",
              "ROLE_ADMIN"
            ]
          },
          "enabled": {
            "type": "boolean"
          },
          "authorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantedAuthority"
            }
          },
          "username": {
            "type": "string"
          },
          "accountNonLocked": {
            "type": "boolean"
          },
          "credentialsNonExpired": {
            "type": "boolean"
          },
          "accountNonExpired": {
            "type": "boolean"
          }
        }
      },
      "ContactDto": {
        "required": [
          "fullName",
          "phone"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "fullName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "contactType": {
            "type": "string",
            "enum": [
              "MAHASISWA",
              "DOSEN"
            ]
          },
          "contactOrganizations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactOrganization"
            }
          },
          "contactSubjects": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactSubject"
            }
          }
        }
      },
      "SubjectDto": {
        "required": [
          "subjectName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "subjectName": {
            "type": "string"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactDto"
            }
          }
        }
      },
      "OrganizationDto": {
        "required": [
          "organizationName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "organizationName": {
            "type": "string"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactDto"
            }
          }
        }
      },
      "ContactSubjectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "contactId": {
            "type": "integer",
            "format": "int64"
          },
          "subjectId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ContactOrganizationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "contactId": {
            "type": "integer",
            "format": "int64"
          },
          "kelas": {
            "type": "string"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64"
          },
          "jabatan": {
            "type": "string",
            "enum": [
              "KETUA",
              "WAKIL_KETUA",
              "BENDAHARA",
              "PJ_MATKUL"
            ]
          },
          "periodeJabatan": {
            "type": "string"
          }
        }
      },
      "AuthRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "Page": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortObject"
            }
          },
          "unpaged": {
            "type": "boolean"
          },
          "paged": {
            "type": "boolean"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "string"
          },
          "nullHandling": {
            "type": "string"
          },
          "ascending": {
            "type": "boolean"
          },
          "property": {
            "type": "string"
          },
          "ignoreCase": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "Input token sebagai 'Bearer <token>'",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}